/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "ethers";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";
import { TypedEventFilter, TypedEvent, TypedListener } from "./commons";

interface MaxBalanceModuleInterface extends ethers.utils.Interface {
  functions: {
    "batchPreSetModuleState(address,address[],uint256[])": FunctionFragment;
    "bindCompliance(address)": FunctionFragment;
    "canComplianceBind(address)": FunctionFragment;
    "getIDBalance(address,address)": FunctionFragment;
    "isComplianceBound(address)": FunctionFragment;
    "isPlugAndPlay()": FunctionFragment;
    "moduleBurnAction(address,uint256)": FunctionFragment;
    "moduleCheck(address,address,uint256,address)": FunctionFragment;
    "moduleMintAction(address,uint256)": FunctionFragment;
    "moduleTransferAction(address,address,uint256)": FunctionFragment;
    "name()": FunctionFragment;
    "preSetModuleState(address,address,uint256)": FunctionFragment;
    "presetCompleted(address)": FunctionFragment;
    "setMaxBalance(uint256)": FunctionFragment;
    "unbindCompliance(address)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "batchPreSetModuleState",
    values: [string, string[], BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "bindCompliance",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "canComplianceBind",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "getIDBalance",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "isComplianceBound",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "isPlugAndPlay",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "moduleBurnAction",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "moduleCheck",
    values: [string, string, BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "moduleMintAction",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "moduleTransferAction",
    values: [string, string, BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "name", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "preSetModuleState",
    values: [string, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "presetCompleted",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "setMaxBalance",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "unbindCompliance",
    values: [string]
  ): string;

  decodeFunctionResult(
    functionFragment: "batchPreSetModuleState",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "bindCompliance",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "canComplianceBind",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getIDBalance",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isComplianceBound",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isPlugAndPlay",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "moduleBurnAction",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "moduleCheck",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "moduleMintAction",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "moduleTransferAction",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "name", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "preSetModuleState",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "presetCompleted",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setMaxBalance",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "unbindCompliance",
    data: BytesLike
  ): Result;

  events: {
    "ComplianceBound(address)": EventFragment;
    "ComplianceUnbound(address)": EventFragment;
    "IDBalancePreSet(address,address,uint256)": EventFragment;
    "MaxBalanceSet(address,uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "ComplianceBound"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ComplianceUnbound"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "IDBalancePreSet"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "MaxBalanceSet"): EventFragment;
}

export class MaxBalanceModule extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  listeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter?: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): Array<TypedListener<EventArgsArray, EventArgsObject>>;
  off<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  on<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  once<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeListener<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeAllListeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): this;

  listeners(eventName?: string): Array<Listener>;
  off(eventName: string, listener: Listener): this;
  on(eventName: string, listener: Listener): this;
  once(eventName: string, listener: Listener): this;
  removeListener(eventName: string, listener: Listener): this;
  removeAllListeners(eventName?: string): this;

  queryFilter<EventArgsArray extends Array<any>, EventArgsObject>(
    event: TypedEventFilter<EventArgsArray, EventArgsObject>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEvent<EventArgsArray & EventArgsObject>>>;

  interface: MaxBalanceModuleInterface;

  functions: {
    batchPreSetModuleState(
      _compliance: string,
      _id: string[],
      _balance: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "batchPreSetModuleState(address,address[],uint256[])"(
      _compliance: string,
      _id: string[],
      _balance: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    bindCompliance(
      _compliance: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "bindCompliance(address)"(
      _compliance: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    canComplianceBind(
      _compliance: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    "canComplianceBind(address)"(
      _compliance: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    getIDBalance(
      _compliance: string,
      _identity: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "getIDBalance(address,address)"(
      _compliance: string,
      _identity: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    isComplianceBound(
      _compliance: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    "isComplianceBound(address)"(
      _compliance: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    isPlugAndPlay(overrides?: CallOverrides): Promise<[boolean]>;

    "isPlugAndPlay()"(overrides?: CallOverrides): Promise<[boolean]>;

    moduleBurnAction(
      _from: string,
      _value: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "moduleBurnAction(address,uint256)"(
      _from: string,
      _value: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    moduleCheck(
      arg0: string,
      _to: string,
      _value: BigNumberish,
      _compliance: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    "moduleCheck(address,address,uint256,address)"(
      arg0: string,
      _to: string,
      _value: BigNumberish,
      _compliance: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    moduleMintAction(
      _to: string,
      _value: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "moduleMintAction(address,uint256)"(
      _to: string,
      _value: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    moduleTransferAction(
      _from: string,
      _to: string,
      _value: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "moduleTransferAction(address,address,uint256)"(
      _from: string,
      _to: string,
      _value: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    name(overrides?: CallOverrides): Promise<[string] & { _name: string }>;

    "name()"(overrides?: CallOverrides): Promise<[string] & { _name: string }>;

    preSetModuleState(
      _compliance: string,
      _id: string,
      _balance: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "preSetModuleState(address,address,uint256)"(
      _compliance: string,
      _id: string,
      _balance: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    presetCompleted(
      _compliance: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "presetCompleted(address)"(
      _compliance: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setMaxBalance(
      _max: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "setMaxBalance(uint256)"(
      _max: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    unbindCompliance(
      _compliance: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "unbindCompliance(address)"(
      _compliance: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;
  };

  batchPreSetModuleState(
    _compliance: string,
    _id: string[],
    _balance: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "batchPreSetModuleState(address,address[],uint256[])"(
    _compliance: string,
    _id: string[],
    _balance: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  bindCompliance(
    _compliance: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "bindCompliance(address)"(
    _compliance: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  canComplianceBind(
    _compliance: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "canComplianceBind(address)"(
    _compliance: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  getIDBalance(
    _compliance: string,
    _identity: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getIDBalance(address,address)"(
    _compliance: string,
    _identity: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  isComplianceBound(
    _compliance: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "isComplianceBound(address)"(
    _compliance: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  isPlugAndPlay(overrides?: CallOverrides): Promise<boolean>;

  "isPlugAndPlay()"(overrides?: CallOverrides): Promise<boolean>;

  moduleBurnAction(
    _from: string,
    _value: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "moduleBurnAction(address,uint256)"(
    _from: string,
    _value: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  moduleCheck(
    arg0: string,
    _to: string,
    _value: BigNumberish,
    _compliance: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "moduleCheck(address,address,uint256,address)"(
    arg0: string,
    _to: string,
    _value: BigNumberish,
    _compliance: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  moduleMintAction(
    _to: string,
    _value: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "moduleMintAction(address,uint256)"(
    _to: string,
    _value: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  moduleTransferAction(
    _from: string,
    _to: string,
    _value: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "moduleTransferAction(address,address,uint256)"(
    _from: string,
    _to: string,
    _value: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  name(overrides?: CallOverrides): Promise<string>;

  "name()"(overrides?: CallOverrides): Promise<string>;

  preSetModuleState(
    _compliance: string,
    _id: string,
    _balance: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "preSetModuleState(address,address,uint256)"(
    _compliance: string,
    _id: string,
    _balance: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  presetCompleted(
    _compliance: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "presetCompleted(address)"(
    _compliance: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setMaxBalance(
    _max: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "setMaxBalance(uint256)"(
    _max: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  unbindCompliance(
    _compliance: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "unbindCompliance(address)"(
    _compliance: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    batchPreSetModuleState(
      _compliance: string,
      _id: string[],
      _balance: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<void>;

    "batchPreSetModuleState(address,address[],uint256[])"(
      _compliance: string,
      _id: string[],
      _balance: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<void>;

    bindCompliance(
      _compliance: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "bindCompliance(address)"(
      _compliance: string,
      overrides?: CallOverrides
    ): Promise<void>;

    canComplianceBind(
      _compliance: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "canComplianceBind(address)"(
      _compliance: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    getIDBalance(
      _compliance: string,
      _identity: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getIDBalance(address,address)"(
      _compliance: string,
      _identity: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isComplianceBound(
      _compliance: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "isComplianceBound(address)"(
      _compliance: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    isPlugAndPlay(overrides?: CallOverrides): Promise<boolean>;

    "isPlugAndPlay()"(overrides?: CallOverrides): Promise<boolean>;

    moduleBurnAction(
      _from: string,
      _value: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "moduleBurnAction(address,uint256)"(
      _from: string,
      _value: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    moduleCheck(
      arg0: string,
      _to: string,
      _value: BigNumberish,
      _compliance: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "moduleCheck(address,address,uint256,address)"(
      arg0: string,
      _to: string,
      _value: BigNumberish,
      _compliance: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    moduleMintAction(
      _to: string,
      _value: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "moduleMintAction(address,uint256)"(
      _to: string,
      _value: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    moduleTransferAction(
      _from: string,
      _to: string,
      _value: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "moduleTransferAction(address,address,uint256)"(
      _from: string,
      _to: string,
      _value: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    name(overrides?: CallOverrides): Promise<string>;

    "name()"(overrides?: CallOverrides): Promise<string>;

    preSetModuleState(
      _compliance: string,
      _id: string,
      _balance: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "preSetModuleState(address,address,uint256)"(
      _compliance: string,
      _id: string,
      _balance: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    presetCompleted(
      _compliance: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "presetCompleted(address)"(
      _compliance: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setMaxBalance(_max: BigNumberish, overrides?: CallOverrides): Promise<void>;

    "setMaxBalance(uint256)"(
      _max: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    unbindCompliance(
      _compliance: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "unbindCompliance(address)"(
      _compliance: string,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    ComplianceBound(
      _compliance: string | null
    ): TypedEventFilter<[string], { _compliance: string }>;

    ComplianceUnbound(
      _compliance: string | null
    ): TypedEventFilter<[string], { _compliance: string }>;

    IDBalancePreSet(
      _compliance: string | null,
      _id: string | null,
      _balance: null
    ): TypedEventFilter<
      [string, string, BigNumber],
      { _compliance: string; _id: string; _balance: BigNumber }
    >;

    MaxBalanceSet(
      _compliance: string | null,
      _maxBalance: BigNumberish | null
    ): TypedEventFilter<
      [string, BigNumber],
      { _compliance: string; _maxBalance: BigNumber }
    >;
  };

  estimateGas: {
    batchPreSetModuleState(
      _compliance: string,
      _id: string[],
      _balance: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "batchPreSetModuleState(address,address[],uint256[])"(
      _compliance: string,
      _id: string[],
      _balance: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    bindCompliance(
      _compliance: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "bindCompliance(address)"(
      _compliance: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    canComplianceBind(
      _compliance: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "canComplianceBind(address)"(
      _compliance: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getIDBalance(
      _compliance: string,
      _identity: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getIDBalance(address,address)"(
      _compliance: string,
      _identity: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isComplianceBound(
      _compliance: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "isComplianceBound(address)"(
      _compliance: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isPlugAndPlay(overrides?: CallOverrides): Promise<BigNumber>;

    "isPlugAndPlay()"(overrides?: CallOverrides): Promise<BigNumber>;

    moduleBurnAction(
      _from: string,
      _value: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "moduleBurnAction(address,uint256)"(
      _from: string,
      _value: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    moduleCheck(
      arg0: string,
      _to: string,
      _value: BigNumberish,
      _compliance: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "moduleCheck(address,address,uint256,address)"(
      arg0: string,
      _to: string,
      _value: BigNumberish,
      _compliance: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    moduleMintAction(
      _to: string,
      _value: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "moduleMintAction(address,uint256)"(
      _to: string,
      _value: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    moduleTransferAction(
      _from: string,
      _to: string,
      _value: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "moduleTransferAction(address,address,uint256)"(
      _from: string,
      _to: string,
      _value: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    name(overrides?: CallOverrides): Promise<BigNumber>;

    "name()"(overrides?: CallOverrides): Promise<BigNumber>;

    preSetModuleState(
      _compliance: string,
      _id: string,
      _balance: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "preSetModuleState(address,address,uint256)"(
      _compliance: string,
      _id: string,
      _balance: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    presetCompleted(
      _compliance: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "presetCompleted(address)"(
      _compliance: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setMaxBalance(
      _max: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "setMaxBalance(uint256)"(
      _max: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    unbindCompliance(
      _compliance: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "unbindCompliance(address)"(
      _compliance: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    batchPreSetModuleState(
      _compliance: string,
      _id: string[],
      _balance: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "batchPreSetModuleState(address,address[],uint256[])"(
      _compliance: string,
      _id: string[],
      _balance: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    bindCompliance(
      _compliance: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "bindCompliance(address)"(
      _compliance: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    canComplianceBind(
      _compliance: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "canComplianceBind(address)"(
      _compliance: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getIDBalance(
      _compliance: string,
      _identity: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getIDBalance(address,address)"(
      _compliance: string,
      _identity: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isComplianceBound(
      _compliance: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "isComplianceBound(address)"(
      _compliance: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isPlugAndPlay(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "isPlugAndPlay()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    moduleBurnAction(
      _from: string,
      _value: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "moduleBurnAction(address,uint256)"(
      _from: string,
      _value: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    moduleCheck(
      arg0: string,
      _to: string,
      _value: BigNumberish,
      _compliance: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "moduleCheck(address,address,uint256,address)"(
      arg0: string,
      _to: string,
      _value: BigNumberish,
      _compliance: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    moduleMintAction(
      _to: string,
      _value: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "moduleMintAction(address,uint256)"(
      _to: string,
      _value: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    moduleTransferAction(
      _from: string,
      _to: string,
      _value: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "moduleTransferAction(address,address,uint256)"(
      _from: string,
      _to: string,
      _value: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    name(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "name()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    preSetModuleState(
      _compliance: string,
      _id: string,
      _balance: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "preSetModuleState(address,address,uint256)"(
      _compliance: string,
      _id: string,
      _balance: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    presetCompleted(
      _compliance: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "presetCompleted(address)"(
      _compliance: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setMaxBalance(
      _max: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "setMaxBalance(uint256)"(
      _max: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    unbindCompliance(
      _compliance: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "unbindCompliance(address)"(
      _compliance: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;
  };
}
