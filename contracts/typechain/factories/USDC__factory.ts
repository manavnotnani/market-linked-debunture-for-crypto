/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { USDC } from "../USDC";

export class USDC__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<USDC> {
    return super.deploy(overrides || {}) as Promise<USDC>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): USDC {
    return super.attach(address) as USDC;
  }
  connect(signer: Signer): USDC__factory {
    return super.connect(signer) as USDC__factory;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): USDC {
    return new Contract(address, _abi, signerOrProvider) as USDC;
  }
}

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Burn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "Max_Token",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526007805460ff191660011790553480156200001e57600080fd5b506200002a33620000bc565b6040805180820190915260048152635553444360e01b6020820152600290620000549082620001b1565b506040805180820190915260048152635553444360e01b60208201526001906200007f9082620001b1565b506003805460ff191660129081179091556200009d90600a62000392565b6005819055620000b39064174876e800620003a7565b600655620003c1565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200013757607f821691505b6020821081036200015857634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001ac57600081815260208120601f850160051c81016020861015620001875750805b601f850160051c820191505b81811015620001a85782815560010162000193565b5050505b505050565b81516001600160401b03811115620001cd57620001cd6200010c565b620001e581620001de845462000122565b846200015e565b602080601f8311600181146200021d5760008415620002045750858301515b600019600386901b1c1916600185901b178555620001a8565b600085815260208120601f198616915b828110156200024e578886015182559484019460019091019084016200022d565b50858210156200026d5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115620002d4578160001904821115620002b857620002b86200027d565b80851615620002c657918102915b93841c939080029062000298565b509250929050565b600082620002ed575060016200038c565b81620002fc575060006200038c565b8160018114620003155760028114620003205762000340565b60019150506200038c565b60ff8411156200033457620003346200027d565b50506001821b6200038c565b5060208310610133831016604e8410600b841016171562000365575081810a6200038c565b62000371838362000293565b80600019048211156200038857620003886200027d565b0290505b92915050565b6000620003a08383620002dc565b9392505050565b80820281158282048414176200038c576200038c6200027d565b610c9080620003d16000396000f3fe608060405234801561001057600080fd5b50600436106100c55760003560e01c806306fdde03146100ca578063095ea7b3146100e857806318160ddd1461010b57806323b872dd14610122578063313ce5671461013557806340c10f191461015457806342966c681461016757806370a082311461017a578063715018a61461019a578063845fd946146101a45780638da5cb5b146101ad57806395d89b41146101cd578063a9059cbb146101d5578063dd62ed3e146101e8578063f2fde38b14610213575b600080fd5b6100d2610226565b6040516100df9190610a70565b60405180910390f35b6100fb6100f6366004610ada565b6102b4565b60405190151581526020016100df565b61011460045481565b6040519081526020016100df565b6100fb610130366004610b04565b6102e3565b6003546101429060ff1681565b60405160ff90911681526020016100df565b6100fb610162366004610ada565b6103a2565b6100fb610175366004610b40565b610550565b610114610188366004610b59565b60086020526000908152604090205481565b6101a2610651565b005b61011460065481565b6101b5610665565b6040516001600160a01b0390911681526020016100df565b6100d2610674565b6100fb6101e3366004610ada565b610681565b6101146101f6366004610b7b565b600960209081526000928352604080842090915290825290205481565b6101a2610221366004610b59565b610697565b6001805461023390610bae565b80601f016020809104026020016040519081016040528092919081815260200182805461025f90610bae565b80156102ac5780601f10610281576101008083540402835291602001916102ac565b820191906000526020600020905b81548152906001019060200180831161028f57829003601f168201915b505050505081565b3360009081526009602090815260408083206001600160a01b0386168452909152902081905560015b92915050565b6001600160a01b03831660009081526009602090815260408083203384529091528120548211156103545760405162461bcd60e51b815260206004820152601660248201527522a92199181d1020b63637bbb0b731b29032b93937b960511b60448201526064015b60405180910390fd5b6001600160a01b038416600090815260096020908152604080832033845290915281208054849290610387908490610bfe565b909155506103989050848484610710565b5060019392505050565b60075460009060ff166103f35760405162461bcd60e51b8152602060048201526019602482015278115490cc8c0e8813585e081cdd5c1c1b1e481c995858da1959603a1b604482015260640161034b565b6103fb610665565b6001600160a01b0316336001600160a01b0316146104585760405162461bcd60e51b815260206004820152601a602482015279115490cc8c0e8813db9b1e4813dddb995c8810d85b88135a5b9d60321b604482015260640161034b565b6001600160a01b03831660009081526008602052604081208054849290610480908490610c11565b9250508190555081600460008282546104999190610c11565b90915550506001600160a01b0383166000908152600860205260409020548211156105185760405162461bcd60e51b815260206004820152602960248201527f45524332303a205472616e7366657220616d6f756e742063616e6e6f74206265604482015268206e6567617469766560b81b606482015260840161034b565b6040518281526001600160a01b03841690600090600080516020610c3b8339815191529060200160405180910390a350600192915050565b336000908152600860205260408120548211156105c35760405162461bcd60e51b815260206004820152602b60248201527f45524332303a205472616e7366657220616d6f756e742065786365656473207560448201526a7365722062616c616e636560a81b606482015260840161034b565b33600090815260086020526040812080548492906105e2908490610bfe565b9250508190555081600460008282546105fb9190610bfe565b90915550506007805460ff1916600117905560405133907fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5906106419085815260200190565b60405180910390a2506001919050565b6106596109c1565b6106636000610a20565b565b6000546001600160a01b031690565b6002805461023390610bae565b600061068e338484610710565b50600192915050565b61069f6109c1565b6001600160a01b0381166107045760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161034b565b61070d81610a20565b50565b6001600160a01b0383166107745760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161034b565b6001600160a01b0382166107d65760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161034b565b6001600160a01b03831660009081526008602052604090205481111561084a5760405162461bcd60e51b8152602060048201526024808201527f45524332303a202766726f6d2720616464726573732062616c616e6365206973604482015263206c6f7760e01b606482015260840161034b565b6001600160a01b03821660009081526008602052604090205461086d8282610c11565b10156108b65760405162461bcd60e51b815260206004820152601860248201527745524332303a2056616c7565206973206e6567617469766560401b604482015260640161034b565b6001600160a01b0380831660009081526008602052604080822054928616825281205490916108e491610c11565b6001600160a01b038516600090815260086020526040812080549293508492909190610911908490610bfe565b90915550506001600160a01b0383166000908152600860205260408120805484929061093e908490610c11565b92505081905550826001600160a01b0316846001600160a01b0316600080516020610c3b8339815191528460405161097891815260200190565b60405180910390a36001600160a01b0380841660009081526008602052604080822054928716825290205482916109ae91610c11565b146109bb576109bb610c24565b50505050565b336109ca610665565b6001600160a01b0316146106635760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161034b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208083528351808285015260005b81811015610a9d57858101830151858201604001528201610a81565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610ad557600080fd5b919050565b60008060408385031215610aed57600080fd5b610af683610abe565b946020939093013593505050565b600080600060608486031215610b1957600080fd5b610b2284610abe565b9250610b3060208501610abe565b9150604084013590509250925092565b600060208284031215610b5257600080fd5b5035919050565b600060208284031215610b6b57600080fd5b610b7482610abe565b9392505050565b60008060408385031215610b8e57600080fd5b610b9783610abe565b9150610ba560208401610abe565b90509250929050565b600181811c90821680610bc257607f821691505b602082108103610be257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b818103818111156102dd576102dd610be8565b808201808211156102dd576102dd610be8565b634e487b7160e01b600052600160045260246000fdfeddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa26469706673582212208fdabd75091ab51986b683cc36ba0455c30439564a2c72f4a62826280e40264964736f6c63430008110033";
