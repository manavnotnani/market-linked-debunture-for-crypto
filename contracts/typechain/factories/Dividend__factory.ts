/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { Dividend } from "../Dividend";

export class Dividend__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Dividend> {
    return super.deploy(overrides || {}) as Promise<Dividend>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Dividend {
    return super.attach(address) as Dividend;
  }
  connect(signer: Signer): Dividend__factory {
    return super.connect(signer) as Dividend__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Dividend {
    return new Contract(address, _abi, signerOrProvider) as Dividend;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "boundToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "calculateTokenewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "claimDividendRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_prjctId",
        type: "uint256",
      },
    ],
    name: "depositDividendRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_rewardToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_master",
        type: "address",
      },
      {
        internalType: "address",
        name: "_boundToken",
        type: "address",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "master",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardsPerShare",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "setPreviouseRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalBuy",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userData",
    outputs: [
      {
        internalType: "uint256",
        name: "previousRewards",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sNot",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600080546001600160a01b03191633179055610da5806100326000396000f3fe608060405234801561001057600080fd5b50600436106100af5760003560e01c8063184b9559146100b45780631c787f8a146100c95780636074db28146100f25780638da5cb5b14610122578063a3e0c21f14610135578063b1c09b2a14610156578063bf014f251461015f578063c7e1d0b114610172578063c89109131461017b578063ee97f7f3146101b7578063f116ba8c146101ca578063f2fde38b146101dd578063f7c618c1146101f0575b600080fd5b6100c76100c23660046108bf565b610203565b005b6004546100dc906001600160a01b031681565b6040516100e9919061090a565b60405180910390f35b61010561010036600461091e565b6102cd565b604080519283526001600160a01b039091166020830152016100e9565b6000546100dc906001600160a01b031681565b61014861014336600461091e565b6103a8565b6040519081526020016100e9565b61014860025481565b6100c761016d36600461091e565b610477565b61014860015481565b6101a261018936600461091e565b6006602052600090815260409020805460019091015482565b604080519283526020830191909152016100e9565b6005546100dc906001600160a01b031681565b6100c76101d8366004610942565b6104ef565b6100c76101eb36600461091e565b610674565b6003546100dc906001600160a01b031681565b600554600160a01b900460ff16156102585760405162461bcd60e51b8152602060048201526013602482015272105b1c9958591e481a5b9a5d1a585b1a5e9959606a1b60448201526064015b60405180910390fd5b60058054600380546001600160a01b038088166001600160a01b03199283161790925560048054868416921691909117905584166001600160a81b031990911617600160a01b1790556102c882600080546001600160a01b039092166001600160a01b0319909216919091179055565b505050565b6000805481906001600160a01b031633146102fa5760405162461bcd60e51b815260040161024f90610964565b6001600160a01b03831660009081526006602052604081209061031c856103a8565b90506000811161036d5760405162461bcd60e51b815260206004820152601c60248201527b6e6f206469766964656e64207265776172647320746f20636c61696d60201b604482015260640161024f565b600354610384906001600160a01b0316868361070c565b60008255600180549201919091556003549092506001600160a01b03169050915091565b6001600160a01b038082166000908152600660205260408082206004805492516370a0823160e01b8152939491938593909216916370a08231916103ee9188910161090a565b602060405180830381865afa15801561040b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042f919061098f565b90506000670de0b6b3a7640000836001015460015461044e91906109be565b61045890846109d7565b61046291906109ee565b835461046e9190610a10565b95945050505050565b6004546001600160a01b031633146104be5760405162461bcd60e51b815260206004820152600a60248201526937b7363c903a37b5b2b760b11b604482015260640161024f565b60006104c9826103a8565b6001600160a01b0390921660009081526006602052604090209182555060018054910155565b6000546001600160a01b031633146105195760405162461bcd60e51b815260040161024f90610964565b610523600161083d565b600554604051636b57959b60e01b8152600481018390526000916001600160a01b031690636b57959b90602401600060405180830381865afa15801561056d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105959190810190610c24565b905080608001518160600151146105ee5760405162461bcd60e51b815260206004820152601e60248201527f737570706c79206d75737420626520657175616c20746f20626f756768740000604482015260640161024f565b6000831161063e5760405162461bcd60e51b815260206004820152601d60248201527f616d6f756e74206d7573742062652067726561746572207468616e2030000000604482015260640161024f565b606081015161065584670de0b6b3a76400006109d7565b61065f91906109ee565b60015461066c9190610a10565b600155505050565b6000546001600160a01b0316331461069e5760405162461bcd60e51b815260040161024f90610964565b6001600160a01b0381166106b157600080fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b17905291516000928392908716916107689190610d31565b6000604051808303816000865af19150503d80600081146107a5576040519150601f19603f3d011682016040523d82523d6000602084013e6107aa565b606091505b50915091508180156107d45750805115806107d45750808060200190518101906107d49190610d4d565b6108365760405162461bcd60e51b815260206004820152602d60248201527f5472616e7366657248656c7065723a3a736166655472616e736665723a20747260448201526c185b9cd9995c8819985a5b1959609a1b606482015260840161024f565b5050505050565b6108828160405160240161085391815260200190565b60408051601f198184030181529190526020810180516001600160e01b031663f82c50f160e01b179052610885565b50565b6108828160006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b6001600160a01b038116811461088257600080fd5b6000806000606084860312156108d457600080fd5b83356108df816108aa565b925060208401356108ef816108aa565b915060408401356108ff816108aa565b809150509250925092565b6001600160a01b0391909116815260200190565b60006020828403121561093057600080fd5b813561093b816108aa565b9392505050565b6000806040838503121561095557600080fd5b50508035926020909101359150565b6020808252601190820152704f6e6c79206f776e65722041636365737360781b604082015260600190565b6000602082840312156109a157600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b818103818111156109d1576109d16109a8565b92915050565b80820281158282048414176109d1576109d16109a8565b600082610a0b57634e487b7160e01b600052601260045260246000fd5b500490565b808201808211156109d1576109d16109a8565b634e487b7160e01b600052604160045260246000fd5b60405161016081016001600160401b0381118282101715610a5c57610a5c610a23565b60405290565b604051601f8201601f191681016001600160401b0381118282101715610a8a57610a8a610a23565b604052919050565b60006001600160401b03821115610aab57610aab610a23565b5060051b60200190565b600082601f830112610ac657600080fd5b81516020610adb610ad683610a92565b610a62565b82815260059290921b84018101918181019086841115610afa57600080fd5b8286015b84811015610b2657805161ffff81168114610b195760008081fd5b8352918301918301610afe565b509695505050505050565b600082601f830112610b4257600080fd5b81516020610b52610ad683610a92565b82815260059290921b84018101918181019086841115610b7157600080fd5b8286015b84811015610b26578051610b88816108aa565b8352918301918301610b75565b60005b83811015610bb0578181015183820152602001610b98565b50506000910152565b600082601f830112610bca57600080fd5b81516001600160401b03811115610be357610be3610a23565b610bf6601f8201601f1916602001610a62565b818152846020838601011115610c0b57600080fd5b610c1c826020830160208701610b95565b949350505050565b600060208284031215610c3657600080fd5b81516001600160401b0380821115610c4d57600080fd5b908301906101608286031215610c6257600080fd5b610c6a610a39565b825181526020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c082015260e083015160e08201526101008084015183811115610cc857600080fd5b610cd488828701610ab5565b8284015250506101208084015183811115610cee57600080fd5b610cfa88828701610b31565b8284015250506101408084015183811115610d1457600080fd5b610d2088828701610bb9565b918301919091525095945050505050565b60008251610d43818460208701610b95565b9190910192915050565b600060208284031215610d5f57600080fd5b8151801515811461093b57600080fdfea2646970667358221220772194ec3a06f64d5bd9a53b8286cc8827949a698f1b93d2f70cb647b9324efd64736f6c63430008110033";
