/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { ClaimTopicsRegistry } from "../ClaimTopicsRegistry";

export class ClaimTopicsRegistry__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ClaimTopicsRegistry> {
    return super.deploy(overrides || {}) as Promise<ClaimTopicsRegistry>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ClaimTopicsRegistry {
    return super.attach(address) as ClaimTopicsRegistry;
  }
  connect(signer: Signer): ClaimTopicsRegistry__factory {
    return super.connect(signer) as ClaimTopicsRegistry__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ClaimTopicsRegistry {
    return new Contract(address, _abi, signerOrProvider) as ClaimTopicsRegistry;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "claimTopic",
        type: "uint256",
      },
    ],
    name: "ClaimTopicAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "claimTopic",
        type: "uint256",
      },
    ],
    name: "ClaimTopicRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_claimTopic",
        type: "uint256",
      },
    ],
    name: "addClaimTopic",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getClaimTopics",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_claimTopic",
        type: "uint256",
      },
    ],
    name: "removeClaimTopic",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506107c8806100206000396000f3fe608060405234801561001057600080fd5b506004361061006d5760003560e01c80630829784614610072578063715018a6146100875780638da5cb5b1461008f578063c7b22551146100b4578063df09d604146100c7578063e1c7392a146100dc578063f2fde38b146100e4575b600080fd5b610085610080366004610646565b6100f7565b005b6100856101e8565b6100976101fc565b6040516001600160a01b0390911681526020015b60405180910390f35b6100856100c2366004610646565b61020b565b6100cf61035c565b6040516100ab919061065f565b6100856103b4565b6100856100f23660046106a3565b6104c5565b6100ff61053b565b60655460005b818110156101e3578260658281548110610121576101216106d3565b9060005260206000200154036101d157606561013e6001846106ff565b8154811061014e5761014e6106d3565b90600052602060002001546065828154811061016c5761016c6106d3565b600091825260209091200155606580548061018957610189610718565b60019003818190600052602060002001600090559055827f0b1381093c776453c1bbe54fd68be1b235c65db61d099cb50d194b2991e0eec560405160405180910390a2505050565b806101db8161072e565b915050610105565b505050565b6101f061053b565b6101fa600061059a565b565b6033546001600160a01b031690565b61021361053b565b606554600f81106102765760405162461bcd60e51b815260206004820152602260248201527f63616e6e6f742072657175697265206d6f7265207468616e20313520746f7069604482015261637360f01b60648201526084015b60405180910390fd5b60005b818110156102fb578260658281548110610295576102956106d3565b9060005260206000200154036102e95760405162461bcd60e51b8152602060048201526019602482015278636c61696d546f70696320616c72656164792065786973747360381b604482015260640161026d565b806102f38161072e565b915050610279565b506065805460018101825560009182527f8ff97419363ffd7000167f130ef7168fbea05faf9251824ca5043f113cc6a7c70183905560405183917f01c928b7f7ade2949e92366aa9454dbef3a416b731cf6ec786ba9595bbd814d691a25050565b606060658054806020026020016040519081016040528092919081815260200182805480156103aa57602002820191906000526020600020905b815481526020019060010190808311610396575b5050505050905090565b600054610100900460ff16158080156103d45750600054600160ff909116105b806103ee5750303b1580156103ee575060005460ff166001145b6104515760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161026d565b6000805460ff191660011790558015610474576000805461ff0019166101001790555b61047c6105ec565b80156104c2576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b6104cd61053b565b6001600160a01b0381166105325760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161026d565b6104c28161059a565b336105446101fc565b6001600160a01b0316146101fa5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161026d565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166106135760405162461bcd60e51b815260040161026d90610747565b6101fa600054610100900460ff1661063d5760405162461bcd60e51b815260040161026d90610747565b6101fa3361059a565b60006020828403121561065857600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b818110156106975783518352928401929184019160010161067b565b50909695505050505050565b6000602082840312156106b557600080fd5b81356001600160a01b03811681146106cc57600080fd5b9392505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b81810381811115610712576107126106e9565b92915050565b634e487b7160e01b600052603160045260246000fd5b600060018201610740576107406106e9565b5060010190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fea26469706673582212204c3fc25e44123807f712a0c7961e53a675588461585eaf737c9a25532511996e64736f6c63430008110033";
