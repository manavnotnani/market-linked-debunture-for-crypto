/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer } from "ethers";
import { Provider } from "@ethersproject/providers";

import type { IMaster } from "../IMaster";

export class IMaster__factory {
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IMaster {
    return new Contract(address, _abi, signerOrProvider) as IMaster;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "usdcAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "agent",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "projectId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "buyCounter",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "receiveAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "buyType",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "country",
        type: "uint256",
      },
    ],
    name: "buy",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "address",
            name: "ir",
            type: "address",
          },
          {
            internalType: "address",
            name: "irs",
            type: "address",
          },
          {
            internalType: "address",
            name: "tir",
            type: "address",
          },
          {
            internalType: "address",
            name: "ctr",
            type: "address",
          },
          {
            internalType: "address",
            name: "mc",
            type: "address",
          },
          {
            internalType: "address",
            name: "prjctOwner",
            type: "address",
          },
          {
            internalType: "address",
            name: "dividend",
            type: "address",
          },
        ],
        indexed: false,
        internalType: "struct MasterLib.ProjectData1",
        name: "propertyData1",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "minimumBuy",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "managementFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalSupply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "bought",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "locked",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "country",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxhold",
            type: "uint256",
          },
          {
            internalType: "uint16[]",
            name: "restrictCountries",
            type: "uint16[]",
          },
          {
            internalType: "address[]",
            name: "agent",
            type: "address[]",
          },
          {
            internalType: "string",
            name: "propertyId",
            type: "string",
          },
        ],
        indexed: false,
        internalType: "struct MasterLib.ProjectData2",
        name: "propertyData2",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "projectId",
        type: "uint256",
      },
    ],
    name: "deployed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ProjectId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "diviendClaim",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ProjectId",
        type: "uint256",
      },
    ],
    name: "diviendDeposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract Identity",
        name: "identity",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "projectId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "agent",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "subscriberId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "uid",
        type: "string",
      },
    ],
    name: "identities",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "agent",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "buyCounter",
        type: "uint256",
      },
    ],
    name: "reject",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "mintAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "agent",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "buyCounter",
        type: "uint256",
      },
    ],
    name: "tokenMint",
    type: "event",
  },
  {
    inputs: [],
    name: "TTL",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "USDC",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lengthLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "managemntFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "projectId",
        type: "uint256",
      },
    ],
    name: "mintAccess",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "projectId",
        type: "uint256",
      },
    ],
    name: "propertyData1",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "address",
            name: "ir",
            type: "address",
          },
          {
            internalType: "address",
            name: "irs",
            type: "address",
          },
          {
            internalType: "address",
            name: "tir",
            type: "address",
          },
          {
            internalType: "address",
            name: "ctr",
            type: "address",
          },
          {
            internalType: "address",
            name: "mc",
            type: "address",
          },
          {
            internalType: "address",
            name: "prjctOwner",
            type: "address",
          },
          {
            internalType: "address",
            name: "dividend",
            type: "address",
          },
        ],
        internalType: "struct MasterLib.ProjectData1",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "projectId",
        type: "uint256",
      },
    ],
    name: "propertyData2",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "minimumBuy",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "managementFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalSupply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "bought",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "locked",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "country",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxhold",
            type: "uint256",
          },
          {
            internalType: "uint16[]",
            name: "restrictCountries",
            type: "uint16[]",
          },
          {
            internalType: "address[]",
            name: "agent",
            type: "address[]",
          },
          {
            internalType: "string",
            name: "propertyId",
            type: "string",
          },
        ],
        internalType: "struct MasterLib.ProjectData2",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "projectId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "buyId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "rejectBuyUpdate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "fact",
        type: "address",
      },
    ],
    name: "setTrexFact",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_projectId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_buyId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_AdminfeeAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_issuerAmount",
        type: "uint256",
      },
    ],
    name: "updateMintModule",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "projectId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "buyID",
        type: "uint256",
      },
    ],
    name: "userBalnc",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "usdc",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "minted",
            type: "bool",
          },
        ],
        internalType: "struct MasterLib.UserBuyData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];
