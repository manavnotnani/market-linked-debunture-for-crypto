/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { CountryAllowModule } from "../CountryAllowModule";

export class CountryAllowModule__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CountryAllowModule> {
    return super.deploy(overrides || {}) as Promise<CountryAllowModule>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): CountryAllowModule {
    return super.attach(address) as CountryAllowModule;
  }
  connect(signer: Signer): CountryAllowModule__factory {
    return super.connect(signer) as CountryAllowModule__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CountryAllowModule {
    return new Contract(address, _abi, signerOrProvider) as CountryAllowModule;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_compliance",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "_country",
        type: "uint16",
      },
    ],
    name: "CountryAlreadyAllowed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_compliance",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "_country",
        type: "uint16",
      },
    ],
    name: "CountryNotAllowed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_compliance",
        type: "address",
      },
    ],
    name: "ComplianceBound",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_compliance",
        type: "address",
      },
    ],
    name: "ComplianceUnbound",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_compliance",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "_country",
        type: "uint16",
      },
    ],
    name: "CountryAllowed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_compliance",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "_country",
        type: "uint16",
      },
    ],
    name: "CountryUnallowed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_country",
        type: "uint16",
      },
    ],
    name: "addAllowedCountry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16[]",
        name: "_countries",
        type: "uint16[]",
      },
    ],
    name: "batchAllowCountries",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16[]",
        name: "_countries",
        type: "uint16[]",
      },
    ],
    name: "batchDisallowCountries",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_compliance",
        type: "address",
      },
    ],
    name: "bindCompliance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "canComplianceBind",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_compliance",
        type: "address",
      },
    ],
    name: "isComplianceBound",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_compliance",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "_country",
        type: "uint16",
      },
    ],
    name: "isCountryAllowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isPlugAndPlay",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "moduleBurnAction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_compliance",
        type: "address",
      },
    ],
    name: "moduleCheck",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "moduleMintAction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "moduleTransferAction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_country",
        type: "uint16",
      },
    ],
    name: "removeAllowedCountry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_compliance",
        type: "address",
      },
    ],
    name: "unbindCompliance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610d1c806100206000396000f3fe608060405234801561001057600080fd5b50600436106100c55760003560e01c8063013b7ce4146100ca5780630694a5fb146100f257806306fdde03146101075780630f4f09041461013b5780632cb7e1ec1461014e578063372491a2146101615780634a932544146101745780634cf4d295146101875780634f44425e146101b3578063771c5281146101c6578063817544c3146101d9578063bcc21053146101ec578063c08e150214610200578063e6f5e80714610213578063f104a8c914610161575b600080fd5b6100dd6100d836600461095e565b61021a565b60405190151581526020015b60405180910390f35b6101056101003660046109b1565b61023d565b005b6040805180820182526012815271436f756e747279416c6c6f774d6f64756c6560701b602082015290516100e991906109ce565b6100dd610149366004610a2c565b61030c565b61010561015c366004610a65565b61033d565b61010561016f366004610aa6565b610371565b6101056101823660046109b1565b6103a4565b6100dd6101953660046109b1565b6001600160a01b031660009081526020819052604090205460ff1690565b6101056101c1366004610ad2565b6104a2565b6101056101d4366004610aef565b61056b565b6101056101e7366004610ad2565b610661565b6100dd6101fa3660046109b1565b50600190565b61010561020e366004610aef565b61071b565b60016100dd565b600080610227838661080e565b9050610233838261030c565b9695505050505050565b3360009081526020819052604090205460ff166102755760405162461bcd60e51b815260040161026c90610b63565b60405180910390fd5b6001600160a01b03811661029b5760405162461bcd60e51b815260040161026c90610b9a565b336001600160a01b038216146102c35760405162461bcd60e51b815260040161026c90610bd1565b6001600160a01b038116600081815260208190526040808220805460ff19169055517f408b49d9be1c914c52a0227e18a077e5a892dddf32a26cfa94a5d9708fad77189190a250565b6001600160a01b038216600090815260016020908152604080832061ffff8516845290915290205460ff1692915050565b3360009081526020819052604090205460ff1661036c5760405162461bcd60e51b815260040161026c90610b63565b505050565b3360009081526020819052604090205460ff166103a05760405162461bcd60e51b815260040161026c90610b63565b5050565b6001600160a01b0381166103ca5760405162461bcd60e51b815260040161026c90610b9a565b6001600160a01b03811660009081526020819052604090205460ff161561042e5760405162461bcd60e51b815260206004820152601860248201527718dbdb5c1b1a585b98d948185b1c9958591e48189bdd5b9960421b604482015260640161026c565b336001600160a01b038216146104565760405162461bcd60e51b815260040161026c90610bd1565b6001600160a01b038116600081815260208190526040808220805460ff19166001179055517f1f7b76c58fb697eb53c6c7c1becb96911516a136e24d7ced386b2355358b75a39190a250565b3360009081526020819052604090205460ff166104d15760405162461bcd60e51b815260040161026c90610b63565b33600090815260016020818152604080842061ffff861685529091529091205460ff161515900361051957338160405163af6d613560e01b815260040161026c929190610c12565b33600081815260016020818152604080842061ffff8716855290915291829020805460ff1916909117905551600080516020610ca783398151915291610560918490610c12565b60405180910390a150565b3360009081526020819052604090205460ff1661059a5760405162461bcd60e51b815260040161026c90610b63565b60005b8181101561036c57336000908152600160208190526040822090918585858181106105ca576105ca610c2f565b90506020020160208101906105df9190610ad2565b61ffff1681526020810191909152604001600020805460ff1916911515919091179055600080516020610ca78339815191523384848481811061062457610624610c2f565b90506020020160208101906106399190610ad2565b604051610647929190610c12565b60405180910390a18061065981610c45565b91505061059d565b3360009081526020819052604090205460ff166106905760405162461bcd60e51b815260040161026c90610b63565b33600090815260016020908152604080832061ffff8516845290915281205460ff16151590036106d757338160405163236a687560e11b815260040161026c929190610c12565b33600081815260016020908152604080832061ffff8616845290915290819020805460ff1916905551600080516020610cc783398151915291610560918490610c12565b3360009081526020819052604090205460ff1661074a5760405162461bcd60e51b815260040161026c90610b63565b60005b8181101561036c573360009081526001602052604081208185858581811061077757610777610c2f565b905060200201602081019061078c9190610ad2565b61ffff1681526020810191909152604001600020805460ff1916911515919091179055600080516020610cc7833981519152338484848181106107d1576107d1610c2f565b90506020020160208101906107e69190610ad2565b6040516107f4929190610c12565b60405180910390a18061080681610c45565b91505061074d565b6000826001600160a01b0316636a3edf286040518163ffffffff1660e01b8152600401602060405180830381865afa15801561084e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108729190610c6c565b6001600160a01b031663134e18f46040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d39190610c6c565b604051637e42683b60e01b81526001600160a01b0384811660048301529190911690637e42683b90602401602060405180830381865afa15801561091b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093f9190610c89565b9392505050565b6001600160a01b038116811461095b57600080fd5b50565b6000806000806080858703121561097457600080fd5b843561097f81610946565b9350602085013561098f81610946565b92506040850135915060608501356109a681610946565b939692955090935050565b6000602082840312156109c357600080fd5b813561093f81610946565b600060208083528351808285015260005b818110156109fb578581018301518582016040015282016109df565b506000604082860101526040601f19601f8301168501019250505092915050565b61ffff8116811461095b57600080fd5b60008060408385031215610a3f57600080fd5b8235610a4a81610946565b91506020830135610a5a81610a1c565b809150509250929050565b600080600060608486031215610a7a57600080fd5b8335610a8581610946565b92506020840135610a9581610946565b929592945050506040919091013590565b60008060408385031215610ab957600080fd5b8235610ac481610946565b946020939093013593505050565b600060208284031215610ae457600080fd5b813561093f81610a1c565b60008060208385031215610b0257600080fd5b82356001600160401b0380821115610b1957600080fd5b818501915085601f830112610b2d57600080fd5b813581811115610b3c57600080fd5b8660208260051b8501011115610b5157600080fd5b60209290920196919550909350505050565b6020808252601e908201527f6f6e6c7920626f756e6420636f6d706c69616e63652063616e2063616c6c0000604082015260600190565b6020808252601f908201527f696e76616c696420617267756d656e74202d207a65726f206164647265737300604082015260600190565b60208082526021908201527f6f6e6c7920636f6d706c69616e636520636f6e74726163742063616e2063616c6040820152601b60fa1b606082015260800190565b6001600160a01b0392909216825261ffff16602082015260400190565b634e487b7160e01b600052603260045260246000fd5b600060018201610c6557634e487b7160e01b600052601160045260246000fd5b5060010190565b600060208284031215610c7e57600080fd5b815161093f81610946565b600060208284031215610c9b57600080fd5b815161093f81610a1c56fe48c279381632bf87fca2680865a7384b6eb20716fd96b882b305a2198930a07435c7374bcb82f2355cb703c8ab6162f87fe83b99618bdb78c6d19b07ddf060a2a264697066735822122006504fb84dd7e705dc65139331cbb4491f1e0b11a4bd88c3df28330b8cec957564736f6c63430008110033";
