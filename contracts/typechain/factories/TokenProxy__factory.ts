/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { TokenProxy } from "../TokenProxy";

export class TokenProxy__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    implementationAuthority: string,
    _identityRegistry: string,
    _compliance: string,
    _name: string,
    _symbol: string,
    _decimals: BigNumberish,
    _onchainID: string,
    _dividend: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TokenProxy> {
    return super.deploy(
      implementationAuthority,
      _identityRegistry,
      _compliance,
      _name,
      _symbol,
      _decimals,
      _onchainID,
      _dividend,
      overrides || {}
    ) as Promise<TokenProxy>;
  }
  getDeployTransaction(
    implementationAuthority: string,
    _identityRegistry: string,
    _compliance: string,
    _name: string,
    _symbol: string,
    _decimals: BigNumberish,
    _onchainID: string,
    _dividend: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      implementationAuthority,
      _identityRegistry,
      _compliance,
      _name,
      _symbol,
      _decimals,
      _onchainID,
      _dividend,
      overrides || {}
    );
  }
  attach(address: string): TokenProxy {
    return super.attach(address) as TokenProxy;
  }
  connect(signer: Signer): TokenProxy__factory {
    return super.connect(signer) as TokenProxy__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenProxy {
    return new Contract(address, _abi, signerOrProvider) as TokenProxy;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "implementationAuthority",
        type: "address",
      },
      {
        internalType: "address",
        name: "_identityRegistry",
        type: "address",
      },
      {
        internalType: "address",
        name: "_compliance",
        type: "address",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "_decimals",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "_onchainID",
        type: "address",
      },
      {
        internalType: "address",
        name: "_dividend",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_implementationAuthority",
        type: "address",
      },
    ],
    name: "ImplementationAuthoritySet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "getImplementationAuthority",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newImplementationAuthority",
        type: "address",
      },
    ],
    name: "setImplementationAuthority",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000d1b38038062000d1b8339810160408190526200003491620004e0565b6001600160a01b038816158015906200005557506001600160a01b03871615155b80156200006a57506001600160a01b03861615155b620000bc5760405162461bcd60e51b815260206004820152601f60248201527f696e76616c696420617267756d656e74202d207a65726f20616464726573730060448201526064015b60405180910390fd5b604051602001620000d890602080825260009082015260400190565b6040516020818303038152906040528051906020012085604051602001620001019190620005f0565b60405160208183030381529060405280519060200120141580156200017f57506040516020016200013d90602080825260009082015260400190565b6040516020818303038152906040528051906020012084604051602001620001669190620005f0565b6040516020818303038152906040528051906020012014155b620001cd5760405162461bcd60e51b815260206004820152601f60248201527f696e76616c696420617267756d656e74202d20656d70747920737472696e67006044820152606401620000b3565b60128360ff161115620002235760405162461bcd60e51b815260206004820152601960248201527f646563696d616c73206265747765656e203020616e64203138000000000000006044820152606401620000b3565b6200023b8860008051602062000cfb83398151915255565b6040516001600160a01b038916907f3b1074392ed8e8424715d0dda2197eede67080b377fc8370e26f3e882207f6b890600090a260006200028960008051602062000cfb8339815191525490565b6001600160a01b031663709bc7f36040518163ffffffff1660e01b8152600401602060405180830381865afa158015620002c7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002ed91906200060c565b90506000816001600160a01b0316898989898989896040516024016200031a97969594939291906200062a565b60408051601f198184030181529181526020820180516001600160e01b0316634d144dd360e01b179052516200035191906200068f565b600060405180830381855af49150503d80600081146200038e576040519150601f19603f3d011682016040523d82523d6000602084013e62000393565b606091505b5050905080620003e65760405162461bcd60e51b815260206004820152601660248201527f496e697469616c697a6174696f6e206661696c65642e000000000000000000006044820152606401620000b3565b50505050505050505050620006ad565b80516001600160a01b03811681146200040e57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b83811015620004465781810151838201526020016200042c565b50506000910152565b600082601f8301126200046157600080fd5b81516001600160401b03808211156200047e576200047e62000413565b604051601f8301601f19908116603f01168101908282118183101715620004a957620004a962000413565b81604052838152866020858801011115620004c357600080fd5b620004d684602083016020890162000429565b9695505050505050565b600080600080600080600080610100898b031215620004fe57600080fd5b6200050989620003f6565b97506200051960208a01620003f6565b96506200052960408a01620003f6565b60608a01519096506001600160401b03808211156200054757600080fd5b620005558c838d016200044f565b965060808b01519150808211156200056c57600080fd5b506200057b8b828c016200044f565b94505060a089015160ff811681146200059357600080fd5b9250620005a360c08a01620003f6565b9150620005b360e08a01620003f6565b90509295985092959890939650565b60008151808452620005dc81602086016020860162000429565b601f01601f19169290920160200192915050565b602081526000620006056020830184620005c2565b9392505050565b6000602082840312156200061f57600080fd5b6200060582620003f6565b600060018060a01b03808a168352808916602084015260e060408401526200065660e0840189620005c2565b83810360608501526200066a8189620005c2565b60ff9790971660808501525093841660a083015250911660c090910152949350505050565b60008251620006a381846020870162000429565b9190910192915050565b61063e80620006bd6000396000f3fe6080604052600436106100295760003560e01c80632d5f1187146100c157806392dd9d65146100f2575b6000610033610112565b6001600160a01b031663709bc7f36040518163ffffffff1660e01b8152600401602060405180830381865afa158015610070573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061009491906105a7565b90503660008037600080366000846127105a03f43d806000803e8180156100ba57816000f35b816000fd5b005b3480156100cd57600080fd5b506100d6610112565b6040516001600160a01b03909116815260200160405180910390f35b3480156100fe57600080fd5b506100bf61010d3660046105cb565b610125565b6000805160206105e98339815191525490565b61012d610112565b6001600160a01b0316336001600160a01b0316146101a85760405162461bcd60e51b815260206004820152602d60248201527f6f6e6c792063757272656e7420696d706c656d656e746174696f6e417574686f60448201526c1c9a5d1e4818d85b8818d85b1b609a1b60648201526084015b60405180910390fd5b6001600160a01b0381166101fe5760405162461bcd60e51b815260206004820152601f60248201527f696e76616c696420617267756d656e74202d207a65726f206164647265737300604482015260640161019f565b60006001600160a01b0316816001600160a01b031663709bc7f36040518163ffffffff1660e01b8152600401602060405180830381865afa158015610247573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061026b91906105a7565b6001600160a01b0316141580156102f6575060006001600160a01b0316816001600160a01b0316636ff6e83f6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ea91906105a7565b6001600160a01b031614155b8015610376575060006001600160a01b0316816001600160a01b0316631ee9ce8b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610346573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036a91906105a7565b6001600160a01b031614155b80156103f6575060006001600160a01b0316816001600160a01b0316639e3e7bb96040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ea91906105a7565b6001600160a01b031614155b8015610476575060006001600160a01b0316816001600160a01b03166361f898256040518163ffffffff1660e01b8152600401602060405180830381865afa158015610446573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061046a91906105a7565b6001600160a01b031614155b80156104f6575060006001600160a01b0316816001600160a01b031663fedcc0526040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ea91906105a7565b6001600160a01b031614155b6105425760405162461bcd60e51b815260206004820181905260248201527f696e76616c696420496d706c656d656e746174696f6e20417574686f72697479604482015260640161019f565b610558816000805160206105e983398151915255565b6040516001600160a01b038216907f3b1074392ed8e8424715d0dda2197eede67080b377fc8370e26f3e882207f6b890600090a250565b6001600160a01b03811681146105a457600080fd5b50565b6000602082840312156105b957600080fd5b81516105c48161058f565b9392505050565b6000602082840312156105dd57600080fd5b81356105c48161058f56fec5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7a264697066735822122058f212d8f1604bf3a020d0b8e065ad9b6731954cd4fb7a376d26a4abbaba84cd64736f6c63430008110033c5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7";
