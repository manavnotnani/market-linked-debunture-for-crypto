/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { TimeTransfersLimitsModule } from "../TimeTransfersLimitsModule";

export class TimeTransfersLimitsModule__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TimeTransfersLimitsModule> {
    return super.deploy(overrides || {}) as Promise<TimeTransfersLimitsModule>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TimeTransfersLimitsModule {
    return super.attach(address) as TimeTransfersLimitsModule;
  }
  connect(signer: Signer): TimeTransfersLimitsModule__factory {
    return super.connect(signer) as TimeTransfersLimitsModule__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TimeTransfersLimitsModule {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TimeTransfersLimitsModule;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "compliance",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "arraySize",
        type: "uint256",
      },
    ],
    name: "LimitsArraySizeExceeded",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_compliance",
        type: "address",
      },
    ],
    name: "ComplianceBound",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_compliance",
        type: "address",
      },
    ],
    name: "ComplianceUnbound",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "compliance",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "limitTime",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "limitValue",
        type: "uint256",
      },
    ],
    name: "TimeTransferLimitUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_compliance",
        type: "address",
      },
    ],
    name: "bindCompliance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "canComplianceBind",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_compliance",
        type: "address",
      },
    ],
    name: "getTimeTransferLimits",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "limitTime",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "limitValue",
            type: "uint256",
          },
        ],
        internalType: "struct TimeTransfersLimitsModule.Limit[]",
        name: "limits",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_compliance",
        type: "address",
      },
    ],
    name: "isComplianceBound",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isPlugAndPlay",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "limitValues",
    outputs: [
      {
        internalType: "bool",
        name: "attributedLimit",
        type: "bool",
      },
      {
        internalType: "uint8",
        name: "limitIndex",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "moduleBurnAction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_compliance",
        type: "address",
      },
    ],
    name: "moduleCheck",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "moduleMintAction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "moduleTransferAction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "limitTime",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "limitValue",
            type: "uint256",
          },
        ],
        internalType: "struct TimeTransfersLimitsModule.Limit",
        name: "_limit",
        type: "tuple",
      },
    ],
    name: "setTimeTransferLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "transferLimits",
    outputs: [
      {
        internalType: "uint32",
        name: "limitTime",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "limitValue",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_compliance",
        type: "address",
      },
    ],
    name: "unbindCompliance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "usersCounters",
    outputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timer",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061113c806100206000396000f3fe608060405234801561001057600080fd5b50600436106100c55760003560e01c8063013b7ce4146100ca5780630694a5fb146100f257806306fdde0314610107578063189fa403146101425780632cb7e1ec1461018f5780632f6bbc5d146101a2578063372491a2146101f2578063388ebb15146102055780634a932544146102255780634cf4d2951461023857806353ccd57d14610264578063bcc2105314610285578063d09b3be014610299578063e6f5e807146102ac578063f104a8c9146101f2575b600080fd5b6100dd6100d8366004610d17565b6102b3565b60405190151581526020015b60405180910390f35b610105610100366004610d6a565b6103e8565b005b604080518082018252601981527854696d655472616e73666572734c696d6974734d6f64756c6560381b602082015290516100e99190610d8e565b61017a610150366004610dee565b60036020908152600093845260408085208252928452828420905282529020805460019091015482565b604080519283526020830191909152016100e9565b61010561019d366004610e39565b6104b7565b6101d96101b0366004610e7a565b600160209081526000928352604080842090915290825290205460ff8082169161010090041682565b60408051921515835260ff9091166020830152016100e9565b610105610200366004610eb3565b6104f6565b610218610213366004610d6a565b610529565b6040516100e99190610edf565b610105610233366004610d6a565b6105b1565b6100dd610246366004610d6a565b6001600160a01b031660009081526020819052604090205460ff1690565b610277610272366004610eb3565b6106af565b6040516100e9929190610f34565b6100dd610293366004610d6a565b50600190565b6101056102a7366004610f4a565b6106f2565b60016100dd565b60006001600160a01b0385166102cb575060016103e0565b6102d58286610932565b156102e2575060016103e0565b60006102ee8387610a0b565b905060005b6001600160a01b0384166000908152600260205260409020548110156103d9576001600160a01b038416600090815260026020526040902080548290811061033d5761033d610f62565b906000526020600020906002020160010154851115610361576000925050506103e0565b6103b8848360026000886001600160a01b03166001600160a01b03168152602001908152602001600020848154811061039c5761039c610f62565b600091825260209091206002909102015463ffffffff16610b3c565b6103c7576000925050506103e0565b806103d181610f8e565b9150506102f3565b5060019150505b949350505050565b3360009081526020819052604090205460ff166104205760405162461bcd60e51b815260040161041790610fa7565b60405180910390fd5b6001600160a01b0381166104465760405162461bcd60e51b815260040161041790610fde565b336001600160a01b0382161461046e5760405162461bcd60e51b815260040161041790611015565b6001600160a01b038116600081815260208190526040808220805460ff19169055517f408b49d9be1c914c52a0227e18a077e5a892dddf32a26cfa94a5d9708fad77189190a250565b3360009081526020819052604090205460ff166104e65760405162461bcd60e51b815260040161041790610fa7565b6104f1338483610b7c565b505050565b3360009081526020819052604090205460ff166105255760405162461bcd60e51b815260040161041790610fa7565b5050565b6001600160a01b0381166000908152600260209081526040808320805482518185028101850190935280835260609492939192909184015b828210156105a65760008481526020908190206040805180820190915260028502909101805463ffffffff168252600190810154828401529083529092019101610561565b505050509050919050565b6001600160a01b0381166105d75760405162461bcd60e51b815260040161041790610fde565b6001600160a01b03811660009081526020819052604090205460ff161561063b5760405162461bcd60e51b815260206004820152601860248201527718dbdb5c1b1a585b98d948185b1c9958591e48189bdd5b9960421b6044820152606401610417565b336001600160a01b038216146106635760405162461bcd60e51b815260040161041790611015565b6001600160a01b038116600081815260208190526040808220805460ff19166001179055517f1f7b76c58fb697eb53c6c7c1becb96911516a136e24d7ced386b2355358b75a39190a250565b600260205281600052604060002081815481106106cb57600080fd5b60009182526020909120600290910201805460019091015463ffffffff9091169250905082565b3360009081526020819052604090205460ff166107215760405162461bcd60e51b815260040161041790610fa7565b336000908152600160209081526040822090829061074190850185611056565b63ffffffff16815260208082019290925260409081016000908120543382526002909352205460ff909116915081158015610780575060048160ff1610155b156107a9576040516382f520a960e01b815233600482015260ff82166024820152604401610417565b811580156107ba575060048160ff16105b15610869573360009081526002602081815260408320805460018101825590845292208592909102016107ed8282611073565b5050604080518082018252600180825260ff8416602080840191909152336000908152918152928120919261082490870187611056565b63ffffffff16815260208082019290925260400160002082518154939092015160ff166101000261ff00199215159290921661ffff19909316929092171790556108e3565b336000908152600260209081526040808320600183529083208693919290919061089590850185611056565b63ffffffff168152602081019190915260400160002054815461010090910460ff169081106108c6576108c6610f62565b906000526020600020906002020181816108e09190611073565b50505b337f172f792abfbfd784dac801573197a4dc27fe914e9bb2756ff598a68a359c29c26109126020860186611056565b8560200135604051610925929190610f34565b60405180910390a2505050565b6000826001600160a01b0316636a3edf286040518163ffffffff1660e01b8152600401602060405180830381865afa158015610972573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099691906110a0565b6001600160a01b0316631ffbb064836040518263ffffffff1660e01b81526004016109c191906110bd565b602060405180830381865afa1580156109de573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0291906110d1565b90505b92915050565b6000826001600160a01b0316636a3edf286040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a4b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a6f91906110a0565b6001600160a01b031663134e18f46040518163ffffffff1660e01b8152600401602060405180830381865afa158015610aac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad091906110a0565b6001600160a01b031663f0eb5e54836040518263ffffffff1660e01b8152600401610afb91906110bd565b602060405180830381865afa158015610b18573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0291906110a0565b6001600160a01b03928316600090815260036020908152604080832094909516825292835283812063ffffffff9290921681529152206001015442101590565b6000610b888484610a0b565b905060005b6001600160a01b038516600090815260026020526040902054811015610c9957610c04858360026000896001600160a01b03166001600160a01b031681526020019081526020016000208481548110610be857610be8610f62565b600091825260209091206002909102015463ffffffff16610ca0565b6001600160a01b03808616600081815260036020908152604080832094871683529381528382209282526002905291822080548693919085908110610c4b57610c4b610f62565b6000918252602080832060029092029091015463ffffffff16835282019290925260400181208054909190610c819084906110f3565b90915550819050610c9181610f8e565b915050610b8d565b5050505050565b610cab838383610b3c565b156104f1576001600160a01b038084166000908152600360209081526040808320938616835292815282822063ffffffff8516808452915291902090610cf190426110f3565b600182015560009055505050565b6001600160a01b0381168114610d1457600080fd5b50565b60008060008060808587031215610d2d57600080fd5b8435610d3881610cff565b93506020850135610d4881610cff565b9250604085013591506060850135610d5f81610cff565b939692955090935050565b600060208284031215610d7c57600080fd5b8135610d8781610cff565b9392505050565b600060208083528351808285015260005b81811015610dbb57858101830151858201604001528201610d9f565b506000604082860101526040601f19601f8301168501019250505092915050565b63ffffffff81168114610d1457600080fd5b600080600060608486031215610e0357600080fd5b8335610e0e81610cff565b92506020840135610e1e81610cff565b91506040840135610e2e81610ddc565b809150509250925092565b600080600060608486031215610e4e57600080fd5b8335610e5981610cff565b92506020840135610e6981610cff565b929592945050506040919091013590565b60008060408385031215610e8d57600080fd5b8235610e9881610cff565b91506020830135610ea881610ddc565b809150509250929050565b60008060408385031215610ec657600080fd5b8235610ed181610cff565b946020939093013593505050565b602080825282518282018190526000919060409081850190868401855b82811015610f27578151805163ffffffff168552860151868501529284019290850190600101610efc565b5091979650505050505050565b63ffffffff929092168252602082015260400190565b600060408284031215610f5c57600080fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201610fa057610fa0610f78565b5060010190565b6020808252601e908201527f6f6e6c7920626f756e6420636f6d706c69616e63652063616e2063616c6c0000604082015260600190565b6020808252601f908201527f696e76616c696420617267756d656e74202d207a65726f206164647265737300604082015260600190565b60208082526021908201527f6f6e6c7920636f6d706c69616e636520636f6e74726163742063616e2063616c6040820152601b60fa1b606082015260800190565b60006020828403121561106857600080fd5b8135610d8781610ddc565b813561107e81610ddc565b63ffffffff811663ffffffff1983541617825550602082013560018201555050565b6000602082840312156110b257600080fd5b8151610d8781610cff565b6001600160a01b0391909116815260200190565b6000602082840312156110e357600080fd5b81518015158114610d8757600080fd5b80820180821115610a0557610a05610f7856fea26469706673582212208d73c68c8daf4400f8d4f28c1fe41a63ae321cae4417a006d4248f60abb48c1b64736f6c63430008110033";
